/// HIDE AN ELEMENT
/// Extend this to hide an element
/// @example
///     @extend %visuallyhidden;

%visuallyhidden {
  margin: -1px;
  padding: 0;
  width: 1px;
  height: 1px;
  overflow: hidden;
  clip: rect(0 0 0 0);
  clip: rect(0, 0, 0, 0);
  position: absolute; 
}

/// Pixels to Ems Function
/// @example
///     font-size: em(24);

@function em($pixels, $context: $browser-context) {
      @return #{$pixels/$context}em;
}

/// Pixels to Rems Function
/// Return a rem value of the exact amount of pixels that you need
/// @example
///     padding: rem(20);
@function rem($pixels, $context: $browser-context) {
      @return #{$pixels/$context}rem;
}

/// Responsive Mixin
/// @example
///     @include mobilefirst($bp-small) { content here }
@mixin mobilefirst($res) {
  @media screen and (min-width: $res) {
    @content;
  }
}

// Apply styling on mobile only
@mixin mobileonly($res) {
	@media screen and (max-width: $res - 1) {
		@content;
	}
}

// Standard section spacing
@mixin sectionspace($pixels-sm: 30, $pixels-lg: 50) {
  padding-top: rem($pixels-sm);
  padding-bottom: rem($pixels-sm);

  @include mobilefirst($bp-med) {
    padding-top: rem($pixels-lg);
    padding-bottom: rem($pixels-lg);
  }
}

// Responsive background images
@mixin responsivebackground($sm: $hero-sm, $md: $hero-md, $lg: $hero-lg) {
  @media screen and (max-width: 800px) {
  	background-image: url('../images/' + $sm);
  }
  @media screen and (min-width: 801px) and (max-width: 1200px) {
    background-image: url('../images/' + $md);
  }
  @media screen and (min-width: 1200px) {
  	background-image: url('../images/' + $lg);
  }
}
